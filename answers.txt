Problem 1: 
C++ code:

#include <iostream>
#include <unistd.h>
#include <fcntl.h>

using namespace std;

int openr(const char* pathname) {
    int file_fd = open(pathname, O_RDONLY);
	if (file_fd == -1) {
        perror("file does not exist");
        exit(1);
    }
    return file_fd;
}
int main (int argc, char* argv[]) {
    if (argc != 2) {
        cerr << argv[0] << endl;
        return 1;
    }
    
    const char* file = argv[1];
    int fd;
    fd = openr(file);
    if (fd != -1) {
        std::cout << "successful: " << fd << std::endl;
        close(fd);
    }
    return 0;
}


x86-64:
.LC0:
	.string	"file does not exist"
	.text
	.globl	_Z5openrPKc
	.type	_Z5openrPKc, @function
_Z5openrPKc:
.LFB1522:
	.cfi_startproc
	endbr64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	movl	$0, %esi
	movq	%rax, %rdi
	movl	$0, %eax
	call	open@PLT
	movl	%eax, -4(%rbp)
	cmpl	$-1, -4(%rbp)
	jne	.L2
	leaq	.LC0(%rip), %rdi
	call	perror@PLT
	movl	$1, %edi
	call	exit@PLT
.L2:
	movl	-4(%rbp), %eax
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE1522:
	.size	_Z5openrPKc, .-_Z5openrPKc
	.section	.rodata
.LC1:
	.string	"successful: "
	.text
	.globl	main
	.type	main, @function


Problem 2: 
uses timespec with the clock and caluclating the nanoseconds to get the output
systemcall: 3300 nanoseconds.
functioncall: 10700 nanoseconds.

